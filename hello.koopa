fun @main(): i32 {
%entry:
  @a_1 = alloc i32
  store 0, @a_1
  @c_1 = alloc i32
  store 1, @c_1
  @d_1 = alloc i32
  store 2, @d_1
  %0 = load @a_1
  %1 = ne %0, 0
  %2 = ne 0, 0
  %3 = or %1, %2
  %4 = load @c_1
  %5 = load @d_1
  %6 = ne %4, 0
  %7 = ne %5, 0
  %8 = and %6, %7
  %9 = ne %3, 0
  %10 = ne %8, 0
  %11 = or %9, %10
  br %11, %then1, %else1
%then1:
  store 3, @c_1
  jump %end1
%else1:
  store 3, @d_1
  @a_2 = alloc i32
  store 1, @a_2
  %12 = load @a_2
  %13 = ne %12, 0
  br %13, %then2, %short_circuit2
%short_circuit2:
  %14 = ne 0, 0
  br %14, %short_circuit3, %short_circuit1
%short_circuit3:
  %15 = load @c_1
  %16 = eq %15, 0
  %17 = ne %16, 0
  %18 = ne %17, 0
  %19 = ne %18, 0
  br %19, %then2, %short_circuit1
%short_circuit1:
  %20 = load @a_2
  %21 = ne %20, 0
  br %21, %short_circuit7, %else2
%short_circuit7:
  %22 = ne 0, 0
  %23 = ne %22, 0
  br %23, %short_circuit6, %else2
%short_circuit6:
  %24 = load @d_1
  %25 = ne %24, 0
  %26 = ne %25, 0
  br %26, %short_circuit5, %else2
%short_circuit5:
  %27 = load @c_1
  %28 = ne %27, 0
  %29 = ne %28, 0
  br %29, %short_circuit4, %else2
%short_circuit4:
  %30 = load @d_1
  %31 = load @c_1
  %32 = add %31, %30
  %33 = ne %32, 0
  %34 = ne %33, 0
  br %34, %then2, %else2
%then2:
  store 4, @c_1
  jump %end2
%else2:
  store 4, @d_1
  jump %end2
%end2:
  %35 = load @a_2
  %36 = eq %35, 0
  br %36, %then3, %else3
%then3:
  ret 1
%else3:
  %37 = load @a_2
  %38 = eq %37, 0
  %39 = ne %38, 0
  br %39, %short_circuit8, %end4
%short_circuit8:
  %40 = load @a_2
  %41 = sub 0, 1
  %42 = eq %40, %41
  %43 = ne %42, 0
  br %43, %then4, %end4
%then4:
  ret 2
%end4:
  jump %end3
%end3:
  jump %end1
%end1:
  %44 = load @d_1
  %45 = load @c_1
  %46 = load @a_1
  %47 = add %46, 0
  %48 = add %47, %45
  %49 = add %48, %44
  ret %49
}
